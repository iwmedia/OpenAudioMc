plugins {
    id 'java-library'
    id("com.gradleup.shadow") version "9.0.0-rc1"
    id 'application'
}

description = 'OpenAudioMc Vistas Server'

application {
    mainClass = 'com.craftmend.vistas.server.VistasBoot'
}

dependencies {
    implementation project(':OpenAudioMc:API')
    implementation project(':OpenAudioMc:Plugin')
    implementation project(':OpenAudioMc:OA-VistasClient')
    implementation deps.folia
    implementation 'com.coreoz:wisp:2.4.0'
    implementation 'com.google.code.gson:gson:2.8.9'

    testImplementation 'junit:junit:4.13.2'

    compileOnly deps.lombok.compileOnly
    annotationProcessor deps.lombok.annotationProcessor
}

shadowJar {
    archiveBaseName = 'vistas-server'
    archiveClassifier = ''

    manifest {
        attributes(
            'Main-Class': 'com.craftmend.vistas.server.VistasBoot',
            'Class-Path': 'libs/'
        )
    }

    relocate 'de.tr7zw.changeme.nbtapi', 'com.craftmend.thirdparty.nbt'
    relocate 'io.', 'com.craftmend.thirdparty.io'
    relocate 'org.json.', 'com.craftmend.thirdparty.json'
    relocate 'reactor.', 'com.craftmend.thirdparty.reactor'
    relocate 'okhttp3', 'com.craftmend.thirdparty.okhttp3'
    relocate 'okio', 'com.craftmend.thirdparty.okio'
    relocate 'org.projectlombok', 'com.craftmend.thirdparty.org'
    relocate 'org.mapdb', 'com.craftmend.thirdparty.mapdb'
    relocate 'kotlin', 'com.craftmend.thirdparty.kotlin'
}

processResources {
    filter { line ->
        line.replace('${oa.version}', project.version)
    }
}

jar {
    enabled = false
}

artifacts {
    archives shadowJar
}

test {
    doFirst {
        println "classpath:"
        classpath.files.each { println it }
    }

    // force classloader isolation off
    forkEvery = 0
    testLogging.showStandardStreams = true
}

test.doFirst {
    println "Test classpath: ${test.classpath.files.join('\n')}"
}
